Welcome to Trakio!

Once in the correct directory, use the command "make build" to compile the 
program. This will check the types in the database file accordingly. 

When testing the functions in database.ml, use the created file "issues.txt" 
as the file containing tasks.

To test interactively, use the command "make" to launch utop. 
For the easiest access to database editing functions you can use User.xxx 
functions, in particular manager_task_edit/write/remove.

The new database structure is not connected to the application yet, but can be
used interactively. Make a task cluster using MakeCluster.Make with Types.Task
and Cluster.NumIDSchema, and you will make use of functions provided by
the functor.

In order to run the interactive UI, please run "make start". 

A test user you may use is with the login "Natasha" and password "passwordlol".
This will allow you to see how a user's (Natasha's) tasks are printed. Natasha's
user has the Manager role, and so it has access to any actions; after logging 
in, once prompted, you may choose from Add, Edit, or Delete to test out the 
actions. (You can also quit the app from there). Within Add, you have the option 
to either add a task, or add a new member to your team. Edit allows you to edit 
a specific field (assignee, title, status, description) of someone's task based 
on ID in your team. Delete allows you to delete a task based on ID.

If you would like to test a user with the Scrummer role (as Engineer and 
Scrummer have the same capabilities), log in using the user "Clarkson" and 
password "password1234". Similar to the Manager role, you will see your own 
tasks printed. Then you will be presented with the option to either see all the 
tasks on your team, or to quit the application after viewing your own tasks. 

To run the test suite run make test. The test suite uses the text files ending 
with test, hence you can do anything you want with main data files as the tests
won't be affected by them.